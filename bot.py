import asyncio
import firebase_admin
from firebase_admin import credentials, db
from aiogram import Bot, Dispatcher
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command

# Telegram bot token
TELEGRAM_BOT_TOKEN = "*********"

# Firebase setup
cred = credentials.Certificate("./google-services.json")  # –§–∞–π–ª –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
firebase_admin.initialize_app(cred, {
    'databaseURL': "************"
})

# Initialize bot and dispatcher
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∞ "–£–∑–Ω–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"
keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å –¥–∞–Ω–Ω—ã–µ üíæ", callback_data="get_data")]
    ]
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase
async def fetch_data():
    humidity_ref = db.reference('house/humidity')
    temp_ref = db.reference('house/temp')
    gas_ref = db.reference('house/raw_value')

    humidity = humidity_ref.get()
    temp = temp_ref.get()
    gas = gas_ref.get()

    if humidity is None or temp is None or gas is None:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ."

    return f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚ò£ –ì–∞–∑: {gas}"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–∞–Ω–Ω—ã–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
@dp.callback_query(lambda c: c.data == "get_data")
async def get_data(callback_query: CallbackQuery):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    data = await fetch_data()
    sent_message = await callback_query.message.answer(data, reply_markup=keyboard)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 0.1 —Å–µ–∫—É–Ω–¥—ã
    while True:
        await asyncio.sleep(0.1)  # –ñ–¥—ë–º 0.1 —Å–µ–∫—É–Ω–¥—ã
        new_data = await fetch_data()

        # –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
        if sent_message.text != new_data:
            await bot.edit_message_text(new_data, chat_id=sent_message.chat.id, message_id=sent_message.message_id, reply_markup=keyboard)

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
